use mavenmovies;

-- 1) Retrieve the total number of rentals made in the Sakila database --
select count(rental_id) as total_rentals from rental;

-- 2) Find the average rental duration (in days) of movies rented from the Sakila database--
select datediff(return_date,rental_date) as average_rental_duration  from rental;

-- 3) Display the first name and last name of customers in uppercase --
select upper(first_name) as Uppercase_first_name, upper(last_name) as Uppercase_last_name from customer;

-- 4) Extract the month from the rental date and display it alongside the rental ID --
select rental_id, month(rental_date) as rental_month from rental;

-- 5)  Retrieve the count of rentals for each customer (display customer ID and the count of rentals) -- 
select customer_id, count(rental_id) as rental_count  from rental group by customer_id;

-- 6) Find the total revenue generated by each store --
SELECT 
    store.store_id, SUM(amount) AS total_revenue
FROM
    store
        LEFT JOIN
    staff ON store.store_id
        LEFT JOIN
    payment ON staff.staff_id
GROUP BY store.store_id

-- 7) Display the title of the movie, customer's first name, and last name who rented it. 
select f.title as movie_title, c.first_name, c.last_name, from film f join 
inventory i on f.film_id = i.film_id join rental r on i.inventory_id=r.inventory_id join 
customer c on r.customer_id = c.customer_id;

-- 8) Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
select actor.first_name as Actor_First_Name, actor.last_name as Actor_Last_Name from film_actor 
join film on film_actor.actor_id = actor_id.actor 
join actor on film.film_id = film_id.film_actor
where film.title = "Gone with the Wind." 

-- 9) Determine the total number of rentals for each category of movies. 
 select film_category.category_id, Count(*) as Rental_Count from rental join inventory on rental.inventory_id = inventory.inventory_id join film on inventory.film_id = film.film_id join film_category on film.film_id = film_category.film_id group by film_category.category_id;
    
-- 10) Find the average rental rate of movies in each language
select language.name as language_name, avg(film.rental_rate) as Average_rental_Rate from film join language on film.language_id = language.language_id group by language.name;

-- 11) Retrieve the customer names along with the total amount they've spent on rentals.
select c.customer_id, c.first_name as First_Name, c.last_name as Last_name, sum(p.amount) as Total_amount from payment p join customer c on c.customer_id = p.customer_id group by customer_id;

-- 12) List the titles of movies rented by each customer in a particular city (e.g., 'London'). 

Select
    c.customer_id,
    c.first_name,
    c.last_name,
    f.title as MovieTitle
from
    customer c
join 
    address a on c.address_id = a.address_id
join
    city ct on a.city_id = ct.city_id
join
    rental r on c.customer_id = r.customer_id
join
    inventory i on r.inventory_id = i.inventory_id
join
    film f on i.film_id = f.film_id
where
    ct.city = 'London'
order by 
    c.customer_id, f.title;
    
  -- 13)  Display the top 5 rented movies along with the number of times they've been rented. 

SELECT 
    film.title AS Movie_Name,
    COUNT(rental.rental_id) AS Rented_Movie
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY film.title
ORDER BY rented_movie desc
LIMIT 5;

-- 14) Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
select customer.customer_id, customer.first_name, customer.last_name from customer
join rental on customer.customer_id = rental.customer_id
join inventory on inventory.inventory_id = rental.inventory_id
join store on store.store_id = inventory.store_id
where store.store_id in (1,2) group by customer.customer_id, customer.first_name, customer.last_name having count(distinct store.store_id)=2;





